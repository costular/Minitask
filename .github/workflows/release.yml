name: Release
on:
  push:
    tags:
      - '*'

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Decode google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $FIREBASE_CONFIG > app/google-services.json

      - name: Unit tests
        run: ./gradlew test

  build:
    needs: [unit_tests]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Decode google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $FIREBASE_CONFIG > app/google-services.json

      - name: Write keystore to disk
        id: write_release_keystore_to_disk
        uses: timheuer/base64-to-file@v1.1.0
        with:
          fileName: "release-keystore.jks"
          encodedString: ${{ secrets.SIGNING_KEY }}

      - name: Set App Center keystore path environment variable
        run: |
          echo RELEASE_STORE_FILE=${{ steps.write_release_keystore_to_disk.outputs.filePath }} >> $GITHUB_ENV

      - name: Generate Release Bundle
        run: ./gradlew bundleRelease
        env:
          SIGNING_KEY: ${{ env.RELEASE_STORE_FILE }}
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: Bundle artifact
          path: app/release/app-release.aab

      - name: Upload mapping.txt
        uses: actions/upload-artifact@master
        with:
          name: mapping.txt
          path: app/build/outputs/mapping/release/mapping.txt

  deploy-play-store:
    needs: [build]
    runs-on: ubuntu-latest
    steps:

      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: app-release.aab

      - name: Download mapping.txt
        uses: actions/download-artifact@master
        with:
          name: mapping.txt

      - name: Publish to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.costular.atomtasks
          releaseFile: app-release-unsigned-signed.apk
          track: production
          mappingFile: mapping.txt
          whatsNewDirectory: whatsNew